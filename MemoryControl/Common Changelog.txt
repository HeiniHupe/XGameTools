1.6.0.0
	- Added dll injection method to ApplicationHook.
	- Depreciated SetLodation in IMemoryObject. This has been replaced with pThis and hProcess fields.
	- Reordered message serverity in Logger class.

1.5.0.0 (22/11/2020)
	- Added comments to more methods and objects.
	- Added MemoryByte, MemoryInt16, MemoryInt32, and MemoryInt64, which are basic types that derive from MemoryObject.
	- Added Vector UI.
	- Added ReloadFromMemory() to IMemoryObject.
	- Added Vector2 struct.
	- Added GoTo(address) to ObjectByteList.
	- Added DecimalPlaces and Increment to vector displays.
	- Added WriteToMemory in MemoryObject.
	- Added protected method to MemoryObject to simplify memory reads.
	- Added method to MemoryObjectPointer to request a different type than the one assigned.
	- Reworked ObjectByteList methods. Previous Pop methods are now depreciated.
	- Completed ApplicationHook abstract class.
	- SetLocation in MemoryObject will no longer reload values from memory.
	- Removed flawed network classes.

1.4.0.0
	- Added the Patcher object.
	- Added the MemoryObjectPointer object.
	- Added the MemoryObject class.
	- Added the ApplicationHook abstract class.
	- Added "void SetLocation(IntPtr hProcess, IntPtr address)" to IMemoryObject.
	- Added Skip method to ObjectByteList

1.3.0.0:
	- Added ToString override to Vector3.
	- Added ToString override to Vector4.
	- Added ushort to ObjectByteList.
	- Added uint to ObjectByteList.

1.2.0.0:
	- Added short in ObjectByteList.
	- Added Vector4 class.
	- Added Vector4 rotation matrix class.
	- Fixed bug in NetworkManager.

1.1.0.0:
	- Script Assembler can now recognise EBX, [EAX], [EBX], [ECX], and [EDX].
	- Added "Pop <register>" to script macros.
	- Added "Push <register>" to script macros.
	- MemoryControl now has methods to read and write IMemoryObjects.

1.0.0.0:
	- Initial